{"version":3,"sources":["components/cartItem/CartItem.jsx","components/cart/Cart.jsx"],"names":["CartItem","name","photoUrl","price","count","ruiid","dispatch","useDispatch","className","onClick","deleteCartItem","Icon","type","CLASS_NAMES","close","src","alt","decreaseCartItem","minus","increaseCartItem","plus","Cart","style","useState","totalPrice","setTotalPrice","cart","useSelector","state","getCart","useEffect","total","forEach","closeCart","startCartClosingAnimation","width","CART_WIDTH","transition","TRANSITION_TIME_MS","setTimeout","map","item","invoiceModalToggle"],"mappings":"oQA6DeA,EAlDE,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,KAAMC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC1CC,EAAWC,cAcjB,OACE,sBAAKC,UAAU,WAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,OAAf,SACE,6BAAKP,MAEP,qBAAKO,UAAU,aAAaC,QAlBJ,WAC5BH,EAASI,YAAeL,KAiBpB,SACE,cAACM,EAAA,EAAD,CAAMC,KAAMC,IAAYC,aAG5B,sBAAKN,UAAU,UAAf,UACE,qBAAKA,UAAU,QAAf,SACE,qBAAKO,IAAKb,EAAUc,IAAI,UAE1B,sBAAKR,UAAU,eAAf,UACE,qBAAKA,UAAU,QAAf,SACE,oCAAOL,OAET,sBAAKK,UAAU,UAAf,UACE,qBAAKA,UAAU,WAAWC,QA3BJ,WAC9BH,EAASW,YAAiBZ,KA0BlB,SACE,cAACM,EAAA,EAAD,CAAMC,KAAMC,IAAYK,UAE1B,qBAAKV,UAAU,eAAf,SACE,4BAAIJ,MAEN,qBAAKI,UAAU,WAAWC,QA7BJ,WAC9BH,EAASa,YAAiBd,KA4BlB,SACE,cAACM,EAAA,EAAD,CAAMC,KAAMC,IAAYO,sB,MCkCvBC,UAxEF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACUC,mBAAS,GADnB,mBACnBC,EADmB,KACPC,EADO,KAGpBnB,EAAWC,cAETmB,EAASC,aAAY,SAACC,GAAD,MAAY,CACvCF,KAAMG,YAAQD,OADRF,KASRI,qBAAU,WACR,GAAIJ,EAAM,CACR,IAAIK,EAAQ,EACZL,EAAKM,SAAQ,YAAuB,IAApB7B,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACrB2B,GAAS5B,EAAQC,KAEnBqB,EAAcM,MAEf,CAACL,IAEJI,qBACE,kBAAM,WACJxB,EAAS2B,eACT3B,EAAS4B,kBAEX,CAAC5B,IASH,OACE,qBACEE,UAAU,mBACVc,MAAK,2BACAA,GADA,IAEHa,MAAOC,IACPC,WAAW,GAAD,OAAKC,IAAL,QALd,SAQE,sBAAK9B,UAAU,YAAf,UACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,aAAf,SACE,6BAAKgB,EAAU,kBAAcA,GAAe,oBAE9C,qBAAKhB,UAAU,YAAYC,QA3CV,WACvBH,EAAS4B,eACTK,YAAW,kBAAMjC,EAAS2B,iBAAcK,MAyClC,SACE,cAAC3B,EAAA,EAAD,CAAMC,KAAMC,IAAYC,aAG5B,qBAAKN,UAAU,YAAf,SACGkB,GACCA,EAAKc,KAAI,gBAAGnC,EAAH,EAAGA,MAAUoC,EAAb,gCACP,cAAC,EAAD,aAAsBpC,MAAOA,GAAWoC,GAAzBpC,QAGpBmB,EACC,qBAAKhB,UAAU,QAAf,SACE,qBAAKC,QAhCM,WACnBH,EAAS4B,eACTK,YAAW,kBAAMjC,EAAS2B,iBAAcK,KACxChC,EAASoC,gBA6BD,qBAEA","file":"static/js/0.f51c7f5f.chunk.js","sourcesContent":["import { useDispatch } from 'react-redux';\r\n\r\nimport { CLASS_NAMES } from '../../constants';\r\nimport {\r\n  deleteCartItem,\r\n  decreaseCartItem,\r\n  increaseCartItem,\r\n} from '../../store/actions';\r\nimport Icon from '../icon/Icon';\r\nimport './cartItem.scss';\r\n\r\nconst CartItem = ({ name, photoUrl, price, count, ruiid }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onCartItemDeleteClick = () => {\r\n    dispatch(deleteCartItem(ruiid));\r\n  };\r\n\r\n  const onCartItemDecreaseClick = () => {\r\n    dispatch(decreaseCartItem(ruiid));\r\n  };\r\n\r\n  const onCartItemIncreaseClick = () => {\r\n    dispatch(increaseCartItem(ruiid));\r\n  };\r\n\r\n  return (\r\n    <div className=\"cartItem\">\r\n      <div className=\"nameDeleteItem\">\r\n        <div className=\"name\">\r\n          <h3>{name}</h3>\r\n        </div>\r\n        <div className=\"deleteItem\" onClick={onCartItemDeleteClick}>\r\n          <Icon type={CLASS_NAMES.close} />\r\n        </div>\r\n      </div>\r\n      <div className=\"wrapper\">\r\n        <div className=\"photo\">\r\n          <img src={photoUrl} alt=\"img\" />\r\n        </div>\r\n        <div className=\"priceCounter\">\r\n          <div className=\"price\">\r\n            <h3>$ {price}</h3>\r\n          </div>\r\n          <div className=\"counter\">\r\n            <div className=\"decrease\" onClick={onCartItemDecreaseClick}>\r\n              <Icon type={CLASS_NAMES.minus} />\r\n            </div>\r\n            <div className=\"currentCount\">\r\n              <p>{count}</p>\r\n            </div>\r\n            <div className=\"increase\" onClick={onCartItemIncreaseClick}>\r\n              <Icon type={CLASS_NAMES.plus} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  closeCart,\r\n  invoiceModalToggle,\r\n  startCartClosingAnimation,\r\n} from '../../store/actions';\r\nimport { getCart } from '../../store/selectors';\r\nimport { CART_WIDTH, CLASS_NAMES, TRANSITION_TIME_MS } from '../../constants';\r\nimport Icon from '../icon/Icon';\r\nimport CartItem from '../cartItem/CartItem';\r\nimport './cart.scss';\r\n\r\nconst Cart = ({ style }) => {\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { cart } = useSelector((state) => ({\r\n    cart: getCart(state),\r\n  }));\r\n\r\n  const onCartCloseClick = () => {\r\n    dispatch(startCartClosingAnimation());\r\n    setTimeout(() => dispatch(closeCart()), TRANSITION_TIME_MS);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (cart) {\r\n      let total = 0;\r\n      cart.forEach(({ price, count }) => {\r\n        total += price * count;\r\n      });\r\n      setTotalPrice(total);\r\n    }\r\n  }, [cart]);\r\n\r\n  useEffect(\r\n    () => () => {\r\n      dispatch(closeCart());\r\n      dispatch(startCartClosingAnimation());\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const onOrderItems = () => {\r\n    dispatch(startCartClosingAnimation());\r\n    setTimeout(() => dispatch(closeCart()), TRANSITION_TIME_MS);\r\n    dispatch(invoiceModalToggle());\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"cartRightWrapper\"\r\n      style={{\r\n        ...style,\r\n        width: CART_WIDTH,\r\n        transition: `${TRANSITION_TIME_MS}ms`,\r\n      }}\r\n    >\r\n      <div className=\"cartRight\">\r\n        <div className=\"top\">\r\n          <div className=\"totalPrice\">\r\n            <h3>{totalPrice ? `Total $ ${totalPrice}` : 'Cart is Empty'}</h3>\r\n          </div>\r\n          <div className=\"closeCart\" onClick={onCartCloseClick}>\r\n            <Icon type={CLASS_NAMES.close} />\r\n          </div>\r\n        </div>\r\n        <div className=\"cartItems\">\r\n          {cart &&\r\n            cart.map(({ ruiid, ...item }) => (\r\n              <CartItem key={ruiid} ruiid={ruiid} {...item} />\r\n            ))}\r\n        </div>\r\n        {totalPrice ? (\r\n          <div className=\"order\">\r\n            <div onClick={onOrderItems}>Order</div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"],"sourceRoot":""}